= javascript_include_tag "assignments"

- btn_class, btn_edit_class = @assignment.on_evaluation_period?(current_user.id) ? ["btn btn_main", "btn btn_default"] : ["btn btn_disabled", "btn btn_disabled"]

/ Área de avaliação
.block_wrapper.assingment_info
  .block_title
    %h2
      = image_tag "icon_suitcase_portfolio.png", :alt => " ", :class=>'block_title_icon' 
      = @assignment.name
    - if can? :evaluate, @assignment
      - if @send_assignment.nil? or @send_assignment.grade.nil? or @send_assignment.grade.blank?
        = button_tag t(:evaluate, :scope => [:assignment, :evaluation]), :class => btn_class, :id => "btn_evaluate", :onclick => "javascript:btn_evaluate(this, ' ');", :disabled => (not @assignment.assignment_in_time?(current_user.id))
      - else
        = button_tag t(:change_grade, :scope => [:assignment, :evaluation]), :class => btn_edit_class, :id => "btn_evaluate", :onclick => "javascript:btn_evaluate(this, '#{@send_assignment.grade}');", :disabled => (not @assignment.assignment_in_time?(current_user.id))
      = button_tag t(:save, :scope => [:assignment, :evaluation]), :class => "btn btn_main", :id => "btn_save_evaluation", :disabled => (not @assignment.assignment_in_time?(current_user.id))
      = button_tag t(:cancel, :scope => [:assignment, :evaluation]), :class => "btn btn_caution", :id => "btn_cancel_evaluation", :onclick => "javascript:btn_cancel_evaluation();", :disabled => (not @assignment.on_evaluation_period?(current_user.id))
  .block_content
    %table.tb_list{:border => "0", :cellpadding => "0", :cellspacing => "0", :width => "100%"}
      %thead
        %tr.lines
          %th=t(:description, :scope => [:assignment, :information])
          %th.date_column= t(:begin, :scope => [:assignment, :information])
          %th.date_column= t(:end, :scope => [:assignment, :information])
          %th.center{:style => "width:68px"}= t(:situation, :scope => [:assignment, :information])
          %th.center{:style => "width:50px"}= t(:grade, :scope => [:assignment, :information])
      %tbody
        %tr.lines
          %td= @assignment.enunciation
          %td{:align => "center"}= l(@assignment.schedule.start_date, :format => :at_date)
          %td{:align => "center"}= l(@assignment.schedule.end_date, :format => :at_date)
          %td{:align => "center", :class => "assignment_#{@situation}"}= t(@situation.to_sym)
          / Área de avaliação
          %td#evaluate_assignment_student
            .student_assignment_evaluate
              - if @send_assignment.nil? or @send_assignment.grade.nil? or @send_assignment.grade.blank?
                = "-"
              - else
                = @send_assignment.grade
            .student_assignment_evaluation
              = text_field_tag :evaluation_grade, @send_assignment.nil? ? "" : @send_assignment.grade, :size => 3

:javascript
  var student_id    = '#{@student_id}';
  var group_id      = '#{@group_id}';
  var assignment_id = '#{@assignment.id}';
  
  $("#btn_save_evaluation").click(function(){

    if(confirm('#{t(:confirm_evaluation, :scope => [:assignment, :evaluation])}')){

      var evaluation_grade = ''+$("#evaluation_grade").attr('value')+'';
      var url              = '#{evaluate_assignment_path(@assignment.id)}';

      $.ajax({
        url: url,
        type: 'POST',
        data:  {'grade': evaluation_grade, 'student_id': student_id, 'group_id': group_id},
        success: function(data) {
          if (data.success == false) {
            flash_message(data.flash_msg, data.flash_class);
            if (data.cancel == true) {
              undo_btn_evaluate_changes();
            }
          }else{
            if($(".mysolar_portlets_content", data).length != 0){
              $("#body_wrapper").html(data);
            }else{
              $(".assingment_info").html(data);
              undo_btn_evaluate_changes();
              flash_message('#{t(:evaluated_success, :scope => [:assignment, :evaluation])}', 'notice');
            }
          }
          
        }
      });
    }
  });

  function btn_cancel_evaluation(){
    if (confirm('#{t(:cancel_evaluation, :scope => [:assignment, :evaluation])}')){
      undo_btn_evaluate_changes();  
      flash_message('#{t(:evaluation_canceled, :scope => [:assignment, :evaluation])}', 'notice');
    }
  }
