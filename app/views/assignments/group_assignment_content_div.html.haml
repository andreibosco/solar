- groups = GroupAssignment.find_all_by_assignment_id(@assignment.id)

.group_assignment_content
  - unless groups.nil? or groups.empty?
    - groups.each do |group|
      - group_info = info_assignment_group(group)
      .group_participants{:id => ["group", group.id]}
        %h3{:class => "group_name_#{!group_info["evaluated"]}", :alt => "#{group_info["error_message"]}"}
          = group.group_name
          %span.group_elements_float
            = button_to t(:evaluate, :scope => [:assignment, :evaluation]), assignment_path(@assignment.id, :group_id => group.id), {:class => "btn btn_default evaluate_group", :alt => t(:evaluate, :scope => [:assignment, :evaluation])}
        %div{:class => "edit_group_#{!group_info["evaluated"]}", :style => "display:none;"}
          = text_field_tag "new_groups_names[][#{@assignment.id}]", group.group_name, :id => "text_field_group_#{group.id}", :class => "rename_group" 
          %a.remove_group{:onclick => "javascript:delete_group('group_#{group.id}', #{@assignment.id}, #{group_info["can_remove"]});", :title => "#{group_info["error_message"]}", :alt => "#{t(:remove, :group_name => group.group_name, :scope => [:assignment, :group_assignments])}"}= "x"
        %div{:class => "group_information_#{!group_info["evaluated"]}"}
          = group_info["quantity_files_sent"]
          =t :files, :scope => [:assignment, :files]
          %span.group_elements_float
            =t :grade, :scope => [:assignment, :information]
            = (group.send_assignment.nil? or group.send_assignment.grade.nil?) ? "-" : group.send_assignment.grade
        - group_participants = GroupParticipant.all_by_group_assignment(group.id)
        %ul{:id => "#{!group_info["evaluated"]}", :value => "#{group.id}"}
          - unless group_participants.empty?
            - group_participants.each do |participant|
              - participant_info = info_assignment_group_participant(participant.user_id, !group_info["evaluated"], group) 
              %li{:class => "student_#{participant.user_id}", :value => "#{participant.user_id}", :id => "#{participant_info["can_be_moved"]}", :onmouseover => "javascript:student_mouseover(this, '#{participant_info["error_message"]}');", :onmouseout => "javascript:student_mouseout(this);"}= truncate(participant.user.name, :length => 40, :omission => "...")
          - else
            %li.no_students_message=t :no_participant, :scope => [:assignment, :group_assignments]

  .group_participants.students_without_group
    %h3.group_name_true=t :students_with_no_group, :scope => [:assignment, :group_assignments]
    .edit_group_true{:style => "display:none;"}
      =t :students_with_no_group, :scope => [:assignment, :group_assignments]
      = hidden_field_tag "new_groups_names[][#{@assignment.id}]", 'no_group', :class => "rename_group"
    %ul.ul_no_group
      - unless @students_without_group.nil? or @students_without_group.empty?
        - @students_without_group.each do |student_without_group| 
          %li#true{:class => "student_#{student_without_group.id}", :value => "#{student_without_group.id}", :onmouseover => "javascript:student_mouseover(this, 'no_message');", :onmouseout => "student_mouseout(this);"}= truncate(student_without_group.name, :length => 40, :omission => "...")
      - else
        %li.no_students_message=t :no_participant, :scope => [:assignment, :group_assignments]

  .import_and_new_groups
