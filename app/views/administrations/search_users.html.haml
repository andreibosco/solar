- unless @users.nil? or @users.empty?
  %table.tb_list.tb_allocation
    %thead
      %tr.lines
        %th= t(".name")
        %th{style: 'width:200px'}= t(".email")
        %th{style: 'width:100px'}= t(".login")
        %th{style: 'width:80px'}= t(".cpf")
        %th{style: 'width:150px'}= ""
    %tbody
    - @users.each do |user|
      %tr.lines
        %td= user.name
        %td{style: 'width:200px'}= user.email
        %td{style: 'width:100px'}= user.username
        %td{style: 'width:80px'}= user.cpf
        %td{style: 'width:150px; align:right'}
          %a{class: "info_list btn", :"data-dropdown"=>"#info-dropdown#{user.id}" }=content_tag(:i, nil, class: 'icon-info') + content_tag(:i, nil, class: 'icon-arrow-down-3')
          .dropdown.dropdown-tip{ class: "info_list", id: "info-dropdown#{user.id}" }
            %ul{ class: "dropdown-menu" }
              %li= link_to t(:details, :scope => [:administrations, :users]), "#", class: 'btn_info_user_administrations', :"data-link-edit" => info_user_administrations_path(id: user.id), :"data-tooltip" => t(:details, :scope => [:administrations, :users])
              %li= link_to t(:allocations, :scope => [:administrations, :users]), "#", class: 'btn_allocations_user_administrations', :"data-link-edit" => allocations_user_administrations_path(id: user.id), :"data-tooltip" => t(:allocations, :scope => [:administrations, :users])
              %li{ class: 'border' }= (label_tag t(:last_accessed, :scope => [:administrations, :users]) + ' ' + last_accessed(user.id))

          = link_to content_tag(:i, nil, class: 'btn icon-edit'), "#", class: 'btn_allocations_user_administrations', :"data-link-edit" => allocations_user_administrations_path(id: user.id), :"data-tooltip" => t(:edit, :scope => [:administrations, :users])
          = link_to content_tag(:i, nil, class: 'btn icon-key'), "#", class: 'btn_allocations_user_administrations', :"data-link-edit" => change_password_administrations_path(id: user.id), :"data-tooltip" => t(:change_password, :scope => [:administrations, :users])

  .navigation
    =# will_paginate @users

- else
  .block_content_text_list.text_none 
    = t(:message_not_found, :scope => [:administrations, :users])

=javascript_include_tag "administrations"