- unless @users.nil? or @users.empty?
  %table.tb_list.tb_allocation
    %thead
      %tr.lines
        %th= t(".name")
        %th{style: 'width:80px'}= t(".cpf")
        %th{style: 'width:200px'}= t(".email")
        %th{style: 'width:120px'}= t(".profile")
        %th{style: 'width:100px'}= ""
    %tbody
    - @users.each do |user|
      - profiles_allocable = profiles_available_for_allocation(user.id, @allocation_tags_ids.join(","))
      %tr.lines
        %td= user.name
        %td{style: 'width:80px'}= user.cpf
        %td{style: 'width:200px'}= user.email
        - unless (profiles_allocable.nil? or profiles_allocable.empty?)
          %td{style: 'width:120px'}
            = select_tag(:profile_id, options_from_collection_for_select(profiles_allocable, :id, :name))
          %td{style: 'width:100px'}
            = hidden_field_tag(:user_id, user.id)
            = button_tag t(".designate"), :type => "button", :class => "btn btn_default btn_designate", :alt => t(".designate_user", :user_name => user.name)
        - else
          %td{:colspan => 2}
            .unavailable
              = t(".designate_profile_no_found")
- else
  .block_content_text 
    =t(".designate_search_no_found")

:javascript

  $(document).ready(function() {

    $(".btn_designate").click(function(){
      var parent  = $(this).parents("tr");
      var profile = $("#profile_id", parent).val();
      var user    = $(this).siblings("#user_id").val();
      var status  = "#{Allocation_Activated}";
      var alloc   = $("#allocation_tags_ids").val();

      $.ajax({
        type: 'POST',
        url: '#{create_designation_allocations_path}',
        data: {
          "user_id": user,
          "status": status,
          "allocation_tags_ids": alloc,
          "profile": profile          
        },
        success: function(data) {
          update_content_url('#{designates_allocations_path}');
          flash_message('#{I18n.t(:allocated, :scope => [:allocations, :success])}', 'notice');
        },
        error: function() {
          flash_message('#{I18n.t(:not_allocated, :scope => [:allocations, :error])}', 'alert');
        }
      });

    });
    
  });