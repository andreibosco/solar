%div
  = form_for(:enrollments, url: enrollments_allocations_path, method: :get) do |f|
    = f.hidden_field(:offer_id, {:value => params[:offer_id], :name => :offer_id}) if params.include?(:offer_id)
    = f.hidden_field(:group_id, {:value => params[:group_id], :name => :group_id}) if params.include?(:group_id)
    = t(:status) + ':'
    = select(:status, :id, status_hash.invert.to_a, {:prompt => t(:all), :selected => params[:status]},
                                                    {:name => 'status', :onchange => "javascript:this.form.submit();"})
    %span.filter_counter= "(#{t(".total_students", :count => @allocations.map(&:user_id).uniq.length)})"

.block_title
  %h2= t(".manage_title")
  %span.block_actions
    %input.btn.btn_default.btn_manage_enrollment_selected{value: t(".manage_selected"), type: 'button'}

.block_content
  %table.tb_list.enrollments
    %thead
      %tr.lines
        %th{style: "width:10px"}
          %input#cbx_all{type: 'checkbox', name: 'all', value: 'all'}
        %th= t(".manage_student")
        %th{style: 'width:100px'}= t(".manage_group")
        %th{style: 'width:100px'}= t(".manage_status")
        %th{style: 'width:150px'}= t(".manage_options")
    %tbody
      - @allocations.each do |allocation|
        %tr.lines
          %td
            %input.cbx_value{type: 'checkbox', name: allocation.id, value: allocation.id, :"status-value" => allocation.status}
          %td= allocation.user_name
          %td= allocation.group.code_semester
          %td= name_of allocation.status
          %td
            %input.btn.btn_default.btn_manage_enrollment{type: 'button', value: t(".manage"), onclick: "javascript:manage_enrollment(this);", :"show-link" => allocation_path(allocation), :"edit-link" => edit_allocation_path(allocation)}
