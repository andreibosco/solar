- t_tool_name = @type.tool_name
.block_wrapper
  .block_title
    %h2=t_tool_name
  .block_content_toolbar
    .block_toolbar_left.btn-group
      = link_to content_tag(:i, nil, class: 'icon-plus'), new_curriculum_unit_path(type_id: @type.id), class: " btn btn_main", id: "btn_new_curriculum_unit", :"data-tooltip" => t( ((@type.id != 3 and @type.id != 4) ? ".new_curriculum_unit" : ".new"), uc_or_module: t_tool_name)
      
    .block_toolbar_right
      = link_to (content_tag(:i, nil, class: 'icon-trash')), "#", class: 'btn delete_curriculum_unit btn_del', :'data-tooltip' => t(".delete", uc_or_module: t_tool_name), :"data-link-delete" => curriculum_unit_path(id: ':id'), disabled: true

- unless @curriculum_units.nil? or @curriculum_units.empty?
  %table.tb_list{:cellpadding => "10", :cellspacing => "0", :width => "100%", :style => "table-layout: fixed"}
    %thead
      %tr.lines
        %th.no_sort.center{:style => "width:25px"}
          %input#all_curriculum_unit{type: "checkbox", :"data-children-names" => "ckb_curriculum_unit"}
        %th.no_sort{:width => "12%"}= CurriculumUnit.human_attribute_name(:code)
        %th{:width => "38%"}= CurriculumUnit.human_attribute_name(:name)
        %th{:width => "28%"}= CurriculumUnit.human_attribute_name(:category)
        %th.no_sort{:width => "12%"}
    %tbody.curriculum_units
      = render partial: 'curriculum_units/curriculum_units'
  = link_to content_tag(:i, nil, class: "icon-ellipsis"), curriculum_units_path(page: @curriculum_units.next_page, type_id: @type.id), class: 'load-more-allocations', remote: true, :"data-tooltip" => t(:load_items) if @curriculum_units.next_page
- else
  .block_content_text_list.text_none 
    = t(".designate_search_no_found")


:javascript

  function result_error(data) {
    var response = JSON.parse(data.responseText);
    if (typeof(response.alert) != "undefined")
      flash_message(response.alert, 'alert');
  }

  jQuery(function($){
    $('.delete_curriculum_unit').attr("disabled", true);

    $("#btn_new_curriculum_unit").call_fancybox();

    $(".edit").click(function(){
      if ($(this).attr('disabled')){
        flash_message("#{t(".cant_edit")}", "alert");
        return false;
      }

      $(this).call_fancybox({href : $(this).data("link-edit"), open: true});
    });

    $('.delete_curriculum_unit').click(function(){
      if ($(this).attr('disabled') == 'disabled'){
        flash_message("#{t(".choose_at_least_one")}", "alert");
        return false;
      }

      // tentar melhorar o nice_delete para incluir a delecao de muitas linhas

      if (!confirm("#{t(:message_confirm)}"))
        return false;

      var ucs = $("#ckb_curriculum_unit:checked");
      var uc_ids = $.map(ucs, function(n){ return ($(n).val()); });

      if (uc_ids.length) {
        $.delete($(this).data('link-delete').replace(':id', uc_ids), function(data){
          flash_message(data.notice, 'notice');
          ucs.parents('tr').fadeOut().remove();
        }).error(function(data){
          var data = $.parseJSON(data.responseText);
          if (typeof(data.alert) != "undefined")
            flash_message(data.alert, 'alert');
        });
      }

      return false;
    });

    $(".block_toolbar_right span.btn")
      .on('click',function(){
        var check = $(':checkbox', this);
        check.prop('checked', !check[0].checked);
      });

    $('#all_curriculum_unit').nice_checkbox({
      can_enable_elements: true
    });

  });
