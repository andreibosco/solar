= form_for :message, :url => {:action => 'index'}, :html => {:id => 'message_list', :class => 'message_div_options', method: :put} do |f|
  = link_to t(:message_new)+' ', {:action => 'new', :search => @search_text}, {:class=>'message_link'}
  - if (@type!="trashbox" and not(@type.nil?))
    %ul.message_menu_listbox
      %li
        %a{:href => "#"}
          = t(:message_select)
          = content_tag(:i, nil, :class=>'icon-arrow-down-3')
        %ul
          %li
            %span#check_all.message_link= t(:message_select_all)
          %li
            %span#check_none.message_link= t(:message_select_none)
          %li
            %span#check_read.message_link= t(:message_select_read)
          %li
            %span#check_unread.message_link= t(:message_select_unread)
  - if @show_message == 'show'
    - selected_id = @message.id
  - else
    - if @type == 'inbox' || @type == 'outbox' || @type == 'trashbox'
      - selected_id = nil

  - if (@type != "trashbox" and !@type.nil?)
    %span#link_mark_as_read.message_link= t(:message_mark_as_read)

  - if @type != "trashbox"
    %span#link_mark_as_unread.message_link= t(:message_mark_as_unread)

  - if @type != "trashbox"
    = link_to(t(:message_delete), message_path(@message.try(:id) || ':id'), {id: :link_remove_message, class: 'message_link', method: :delete, confirm: t(:message_confirm)})

  - if @type == "trashbox"
    = link_to(t(:message_restore), restore_message_path(@message.try(:id) || ':id'), {id: :link_restore_message, class: 'message_link', method: :put})

:javascript
  $(function($) {
     $("#link_restore_message").click(function() {
        var values_id = '';
        $("input:checked").each(function(key, v) {
          values_id += ((key == 0) ? "" : "$") + $(this).val();
        });

        if (values_id != '') {
          $(this).attr('href', $(this).attr('href').replace(':id', values_id));
        } else {
          return false;
        }
     });

     $("#link_remove_message").click(function() {
        var type = "#{@type}";
        var search = "#{@search_text}";
        var checked_messages = "#{@message.nil?}".toLowerCase();

        if (checked_messages == "true") {
          values_id = "";
          $("input:checked").each(function(key, v) {
            values_id += ((key == 0) ? "" : "$") + $(this).val();
          });

          if (values_id != "") {
            $(this).attr('href', $(this).attr('href').replace(':id', values_id) + '?type=' + type + '&search=' + search);
          } else {
            return false; // nao faz nada
          }
        }
     });

     $("#check_read").click(function() {
        $(".selected_messages").each(function(i){
          style_message = $(this).next("#message_style").val();
          if (style_message == "message_read")
            $(this).attr("checked","checked");
          else
             $(this).removeAttr("checked");
        });
     });

     $("#check_unread").click(function() {
       $(".selected_messages").each(function(i){
          style_message = $(this).next("#message_style").val();
          if (style_message == "message_read")
            $(this).removeAttr("checked");
          else
            $(this).attr("checked","checked");
        });
     });

     $("#link_mark_as_read").click(function() {
        change_reading_status("read");
     })

     $("#link_mark_as_unread").click(function() {
        change_reading_status("unread");
     })

     $("#check_all").click(function() {
        $(".selected_messages").each(function(i) {
            $(this).attr("checked","checked");
        });
     });

     $("#check_none").click(function() {
        $(".selected_messages").each(function(i) {
            $(this).removeAttr("checked");
        });
     });

    $(".selected_messages:input").click(function(){
      $(this).parents('.message_line').toggleClass('message_line_highlight');
    })

  });
/*
  function change_reading_status(new_status) {
      var value = "";
      var type = "#{@type}";
      var search = "#{@search_text}";
      var checked_messages = "#{@message.nil?}".toLowerCase();

      if (checked_messages == "true") {
        values_id = "";
        $("input:checked").each(function(key, v) {
          values_id += ((key == 0) ? "" : ",") + $(this).val();
        });

        if (values_id != "") {
          var url_for = "#{change_indicator_reading_message_path(':id')}".replace(':id', values_id) + "?new_status=" + new_status + "&type=" + type + "&search=" + search;
          $("#message_list").attr("action", url_for).submit();
        }
      } else { // marcar como nao lida
        var url_for = "#{change_indicator_reading_message_path(@message.try(:id)) unless @message.nil?}" + "?new_status=" + new_status + "&type=index";
        $("#message_list").attr("action", url_for).submit();
      }
  }
*/