= javascript_include_tag "group_assignments"

-# Descricao da atividade 
.block_wrapper
  .block_title
    %h2
      = image_tag "icon_suitcase_portfolio.png", :alt => " ", :class=>'block_title_icon' 
      = @assignment.name
  .block_content
    -# Descricao da atividade
    %table.tb_list{:border => "0", :cellpadding => "0", :cellspacing => "0", :width => "100%"}
      %thead
        %tr.lines
          %th=t(:activity_description)
          %th{:align => "right", :style => "width:70px"}
            = image_tag "clock.png", :alt => " ", :class=>"block_title_icon"
            = t(:activity_begin)
          %th.clock_icon
            = image_tag "clock.png", :alt => " ", :class=>"block_title_icon"
            = t(:activity_end)
      %tbody
        %tr.lines
          %td= @assignment.enunciation
          %td.center= l(@assignment.schedule.start_date, :format => :files)
          %td.center= l(@assignment.schedule.end_date, :format => :files)

-# Participantes do grupo
- if @assignment.type_assignment == Group_Activity
  .block_wrapper
    .block_title
      %h2
        = image_tag "icon_participants.png", :alt => " ", :class => 'block_title_icon'
        = @group.group_name
    .block_content
      - gp = group_participants(@group_id)
      - unless gp.empty?
        %table.tb_list{:border => "0", :cellpadding => "0", :cellspacing => "0", :width => "100%"}
          %thead
            %tr.lines
              %th=t(:portfolio_participants)
          %tbody
            - gp.each do |participant|
              %tr.lines
                %td= participant['name']
      - else
        .portfolio_div_padding= t(:itens_not_found)

-# Arquivos enviados pelo aluno
.block_wrapper
  .block_title
    %h2
      = image_tag "icon_suitcase_portfolio.png", :alt => " ", :class=>'block_title_icon'
      = t(:sent_files)
    %span.download_all_icon
      - unless @files_sent_assignment.nil? or @files_sent_assignment.empty?
        = link_to (image_tag "mimetypes/zip.png", :alt => t(:download_all_files_zip), :class => 'block_title_icon'), download_files_portfolio_teacher_path(:assignment_id => @assignment.id, :student_id => @student_id, :group_id => @group_id, :type => "assignment", :zip => true)
        = link_to t(:download_all_files_zip), download_files_portfolio_teacher_path(:assignment_id => @assignment.id, :student_id => @student_id, :group_id => @group_id, :type => "assignment", :zip => true), {:class => "link_content"}
  .block_content
    - unless @files_sent_assignment.nil? or @files_sent_assignment.empty?
      %table.tb_list{:border => "0", :cellpadding => "0", :cellspacing => "0", :width => "100%"}
        %thead
          %tr.lines
            %th= t(:file_name)
            %th{:align => "right", :style => "width: 80px"}= t(:file_size)
            - if @assignment.type_assignment == Group_Activity 
              %th{:align => "right", :style => "width: 80px"}= t(:file_sent_by)
            %th.clock_icon
              = image_tag "clock.png", :alt => " ", :class=>"block_title_icon"
              = t(:sent_on)
        %tbody
          - @files_sent_assignment.each do |file|
            %tr.lines
              %td
                = link_to image_tag(icon_attachment(file.attachment_file_name)), download_files_portfolio_teacher_path(:file_id => file.id, :assignment_id => @assignment.id, :student_id => @student_id, :group_id => @group_id, :type => "assignment"), {:class => "file_icon", :alt => " "}
                = link_to file.attachment_file_name, download_files_portfolio_teacher_path(:file_id => file.id, :assignment_id => @assignment.id, :student_id => @student_id, :group_id => @group_id, :type => "assignment"), {:class => "link_content"}
              %td.right= format('%.2f KB', file.attachment_file_size/1024.0)
              - if @assignment.type_assignment == Group_Activity
                %td.right= file.user.nick
              %td.center= l(file.attachment_updated_at, :format => :files)
    - else
      .portfolio_div_padding= t(:itens_not_found)

-# Área de avaliação
.block_wrapper
  .block_title
    %h2
      = image_tag "icon_participants.png", :alt => " ", :class=>'block_title_icon'
      = t(:portfolio_evaluation)
    %span.portfolio_title_button
      - if can? :evaluate, PortfolioTeacher and must_be_responsible(@assignment.id)
        - if assignment_in_time?(@assignment.id)
          = button_tag t(:portfolio_evaluate), :class => "btn btn_main", :id => "btn_evaluate", :onclick => "javascript:btn_evaluate();"
          = button_tag t(:portfolio_cancel), :class => "btn btn_caution", :id => "btn_cancel_evaluation", :onclick => "javascript:btn_cancel_evaluation();"
          = button_tag t(:portfolio_save), :class => "btn btn_main", :id => "btn_save_evaluation", :onclick => "javascript:btn_save_evaluation();"
        - else
          desabilitado
  .block_content#evaluate_assignment_student
    %table.tb_list#tb_student_assignment{:border => "0",  :cellpadding => "0", :cellspacing => "0", :width => "100%"}
      - unless @send_assignment.nil? or (@send_assignment.grade.nil? and @send_assignment.comment.nil?)
        %thead
          %tr.lines
            %th{:align => "right", :style => "width:30px"}= t(:grade)
            %th= t(:comment)
        %tbody
          %tr.lines
            %td= @send_assignment.grade
            %td= @send_assignment.comment
      - else
        .portfolio_div_padding#no_itens_evaluation_tb= t(:itens_not_found)
    %table.tb_list#tb_student_assignment_evaluate{:border => "0", :cellpadding => "0", :cellspacing => "0", :width => "100%", :style => "display: none"}
      %thead
        %tr.lines
          %th.right{:style => "width:30px"}= t(:grade)
          %th= t(:comment)
      %tbody
        %tr.lines
          %td= text_field_tag :evaluation_grade, @send_assignment.nil? ? "" : @send_assignment.grade, :size => 3
          %td= text_area_tag :evaluation_comment, @send_assignment.nil? ? "" : @send_assignment.comment, :rows => 4, :cols => 113

-# Área de comentários
.block_wrapper
  .block_title
    %h2
      = image_tag "icon_suitcase_portfolio.png", :alt => " ", :class=>'block_title_icon'
      = t(:comments)
    %span.portfolio_title_button
      - if can? :send_comment, PortfolioTeacher and must_be_responsible(@assignment.id)
        - if assignment_in_time?(@assignment.id)
          = button_tag t(:portfolio_comment), :class => "btn btn_main", :id => "btn_comment", :onclick => "javascript:btn_comment();"
        - else
          botão desabilitado
  .forum_posts_wrapper
    - display_comment = @error_message.nil? ? "display:none" : "display:block"
    .comment_form{:style => "#{display_comment}"}
      %table.forum_post{:border => "0", :cellpadding => "0", :cellspacing => "0", :width => "100%"}
        %tr
          %td.forum_post_icon{:rowspan => "3"}= image_tag('no_image_forum.png')
          %td.forum_post_head
            .forum_post_author
              .forum_participant_nick= @user.nick
              .forum_participant_profile= @user_profile.name
            .forum_post_date=l Date.current
        %tr
          %td.forum_post_content{:colspan => "2"}
            = form_for(:assignment_comment, :html => {:id => 'comment_form', :multipart => true}, :url => send_comment_portfolio_teacher_path(:assignment_id => @assignment.id, :student_id => @student_id, :group_id => @group_id)) do |f|
              .forum_post_inner_content= text_area_tag :comment, '', :rows => 4, :cols => 116
              .forum_post_attachment
                %h3= t(:attached_files)
                %ul.forum_post_attachment_list.comments_files_div
                  = file_field_tag 'comment_files[]', :class => "comments_files"
                  %a.more_comment_files_link{:href => "#", :onclick => "javascript:more_files();"}
                    = t(:attach_another_file)
              .portfolio_title_button
                = button_tag(:type => 'button', :class => "btn btn_caution", :id => "btn_cancel_comment_new", :alt => t(:portfolio_cancel), :onclick => "javascript:btn_cancel_comment('new');") do
                  = content_tag(:span, t(:portfolio_cancel))
                = submit_tag t(:portfolio_send_comment), :class=>'btn btn_main'

    - unless @comments.nil? or @comments.empty?
      - @comments.each_with_index do |comment, idx|
        %table{:class => ["forum_post", "tb_comments", "tb_comment_#{comment.id}"], :border => "0", :cellpadding => "0", :cellspacing => "0", :width => "100%"}
          %tr
            %td.forum_post_icon{:rowspan => "3"}= image_tag(comment.user.photo.url(:forum), :alt => t(:mysolar_alt_img_user) + ' ' + comment.user.nick)
            %td.forum_post_head
              .forum_post_author
                .forum_participant_nick= comment.user.nick
                .forum_participant_profile= @users_profiles[idx].name
              .forum_post_date
                - unless comment.updated_at.blank?
                  =l comment.updated_at
                - else
                  = '-'
          %tr
            %td{:class => ["forum_post_content comment_#{comment.id}", "assignment_comment"], :colspan => "2"}
              .forum_post_inner_content= comment.comment
              .forum_post_attachment
                %h3= t(:attached_files)
                %ul.forum_post_attachment_list
                  - unless @comments_files[idx].empty?
                    - @comments_files[idx].each do |comment_file|
                      %li
                        = link_to comment_file.attachment_file_name, download_files_portfolio_teacher_path(:file_id => comment_file.id, :assignment_id => @assignment.id, :student_id => @student_id, :group_id => @group_id, :type => "comment"), {:class => "link_content"}
                        .forum_post_date=l comment_file.attachment_updated_at
                  - else
                    = '-'
                .portfolio_comment_button
                  - if comment.user_id == @user.id
                    - if can? :remove_comment, PortfolioTeacher and must_be_responsible(@assignment.id)
                      - if assignment_in_time?(@assignment.id)
                        = button_tag t(:delete), :class => "btn btn_caution", :onclick => "javascript:remove_comment(#{comment.id}, #{@assignment.id});"
                      - else 
                        botao desabilitado
                    - if can? :send_comment, PortfolioTeacher and must_be_responsible(@assignment.id)
                      - if assignment_in_time?(@assignment.id)
                        = button_tag t(:portfolio_edit), :class => "btn btn_default btn_edit_comment_#{comment.id}", :onclick => "javascript:btn_edit_comment(this, #{comment.id});"
                      - else 
                        botao desabilitado
              %td{:class => ["forum_post_content", "form_comment_#{comment.id}", "form_comment"], :colspan => "2", :style => "display:none"}
                = form_for(:assignment_comment, :html => {:id => "comment_form_#{comment.id}", :multipart => true}, :url => send_comment_portfolio_teacher_path(:assignment_id => @assignment.id, :student_id => @student_id, :group_id => @group_id, :comment_id => comment.id)) do |f|
                  .forum_post_inner_content= text_area_tag :comment, comment.comment, :rows => 4, :cols => 116
                  .forum_post_attachment
                    %h3= t(:attached_files)
                    %ul.forum_post_attachment_list.comments_files_div
                      - unless @comments_files[idx].empty?
                        - @comments_files[idx].each do |comment_file|
                          %li
                            = link_to comment_file.attachment_file_name, download_files_portfolio_teacher_path(:file_id => comment_file.id, :assignment_id => @assignment.id), {:class => "link_content link_comment_#{comment_file.id}", :id => "#{comment_file.id}"}
                            .forum_post_date=l comment_file.attachment_updated_at
                            = image_tag("icon_delete_small.png", :onclick => "javascript:remove_file(#{comment_file.id}, #{comment.id}, this);", :id=>"remove_file_#{comment_file.id}", :alt => t(:portfolio_remove_file))
                            = image_tag("icon_delete_small.png", :onclick => "javascript:return_file(#{comment_file.id}, #{comment.id}, this);", :id=>"return_file_#{comment_file.id}", :class => "return_file", :alt => t(:portfolio_return_file))
                      = hidden_field_tag 'deleted_files[]', "", {:id => "delete_file_#{comment.id}"}
                      = file_field_tag 'comment_files[]', :class => "comments_files"
                      %a.more_comment_files_link{:href => "#", :onclick => "javascript:more_files();"}= t(:attach_another_file)
                  .portfolio_title_button
                    = button_tag(:type => 'button', :class => "btn btn_caution", :id => "btn_cancel_comment_#{comment.id}", :alt => t(:portfolio_cancel), :onclick => "javascript:btn_cancel_comment('#{comment.id}');") do
                      = content_tag(:span, t(:portfolio_cancel))
                    = button_tag t(:portfolio_send_comment), :class => "btn btn_main", :id => "btn_cancel_comment_new", :onclick => "javascript:submit_edit_comment_form(#{comment.id});"
    - else
      .block_content.portfolio_div_padding#no_itens_message_comment
        = t(:itens_not_found)

:javascript
  var student_id    = '#{@student_id}';
  var group_id      = '#{@group_id}';
  var assignment_id = '#{@assignment.id}';

  function undo_btn_comment_changes(comment_id){
    if(comment_id == 'new'){
      $("#btn_comment").fadeIn(); 
      $(".comment_form").hide();
      show_no_itens_div = $('td', '#tb_comments').length == 0;
      if(show_no_itens_div){
        $("#no_itens_message_comment").fadeIn();
      }
    }else{
      $(".btn_edit_comment_"+comment_id).fadeIn();
      $(".comment_"+comment_id).fadeIn();
      $(".form_comment").hide();
      $(".assignment_comment").fadeIn();
    }
  }

  function undo_btn_evaluate_changes(){
    $("#tb_student_assignment_evaluate").hide(); 
    $("#tb_student_assignment").fadeIn();
    $("#btn_cancel_evaluation").hide();
    $("#btn_save_evaluation").hide();
    $("#btn_evaluate").fadeIn(); 
    show_no_itens_div = $('td', '#tb_student_assignment').length == 0;
    if(show_no_itens_div){
      $("#no_itens_evaluation_tb").fadeIn();
    }
  }

  function undo_everything(){
    undo_btn_evaluate_changes();
    undo_btn_comment_changes("new");
    undo_btn_comment_changes();
  }

  function btn_comment(){
    undo_everything();
    $("#no_itens_message_comment").hide();
    $("#btn_comment").hide();
    $(".comment_form").fadeIn();
  }
  
  function btn_edit_comment(this_div, comment_id){
    undo_everything();
    $(".comment_"+comment_id).hide();
    $(".form_comment_"+comment_id).fadeIn(); 
  }

  function btn_evaluate(){
    undo_everything();
    $("#tb_student_assignment").hide();
    $("#no_itens_evaluation_tb").hide();
    $("#tb_student_assignment_evaluate").fadeIn();
    $("#btn_evaluate").hide();
    $("#btn_cancel_evaluation").fadeIn();
    $("#btn_save_evaluation").fadeIn();
  }

  function submit_edit_comment_form(comment_id){
    var deleted_files = new Array();
    var disabled_files = $(".disabled_file_"+comment_id);
    for(var i = 0; i<$(disabled_files).length; i++){
      deleted_files.push($(disabled_files)[i].id);
    }
   $("#delete_file_"+comment_id).val(deleted_files); 
   $("#comment_form_"+comment_id).submit();
  }

  function btn_save_evaluation(){
    if (confirm('#{t(:portfolio_confirm_evaluation)}')){

      var evaluation_grade    = ''+$("#evaluation_grade").attr('value')+'';
      var evaluation_comment  = $("#evaluation_comment").attr('value');
      var url                 = '#{evaluate_portfolio_teacher_path}';

      var continue_with_request = true;
      $.ajax({
        url: url,
        type: 'POST',
        data:  {'grade': evaluation_grade, 'assignment_id': assignment_id, 'comment': evaluation_comment, 'student_id': student_id, 'group_id': group_id},
        success: function(data) {
          if (data.success == false) {
            continue_with_request = false;
            flash_message(data.flash_msg, data.flash_class);
            if (data.cancel == true) {
              undo_btn_evaluate_changes();
            }
          }else{
            $("#evaluate_assignment_student").html(data);
            undo_btn_evaluate_changes();
            flash_message('#{t(:student_evaluated_success)}', 'notice');
          }
        }
      });
      return continue_with_request; 
    }
  }

  function btn_cancel_comment(comment_id){
    if (confirm('#{t(:portfolio_cancel_comment)}')){
      undo_btn_comment_changes(comment_id);  
      flash_message('#{t(:comment_canceled)}', 'notice');
      var dont_have_comments = $('.tb_comments').length == 0;
      if(dont_have_comments){
        $('<div id="no_itens_message_comment" class="block_content portfolio_div_padding">#{t(:itens_not_found)}</div>').appendTo($("#comment_assignment_student"));
      }
    }
  }

  function btn_cancel_evaluation(){
    if (confirm('#{t(:portfolio_cancel_evaluation)}')){
      undo_btn_evaluate_changes();  
      flash_message('#{t(:student_evaluation_canceled)}', 'notice');
    }
  }

  function remove_file(comment_file_id, comment_id, this_div){
    $(this_div).hide();
    $("#return_file_"+comment_file_id).fadeIn();
    $(".link_comment_"+comment_file_id).css("text-decoration", "underline line-through");
    $(".link_comment_"+comment_file_id).attr("class", "link_content link_comment_"+comment_file_id+" disabled_file_"+comment_id);
  }

  function remove_comment(comment_id){
    url = '#{remove_comment_portfolio_teacher_path}';
    if (!confirm("#{t(:message_confirm)}")) return;
      $.ajax({
        type: "DELETE",
        url: url,
        data: {'comment_id': comment_id, 'assignment_id': assignment_id},
        success: function(data) {
          if (data.success == true) {
            $('.tb_comment_' + comment_id).fadeOut(100, function() {
              $(this).remove();
            });
          }
          flash_message(data.flash_msg, data.flash_class);
        },
      });
  }

  function return_file(comment_file_id, comment_id, this_div){
    $(this_div).hide();
    $("#remove_file_"+comment_file_id).fadeIn();
    $(".link_comment_"+comment_file_id).css("text-decoration", "underline");
    $(".link_comment_"+comment_file_id).attr("class", "link_content link_comment_"+comment_file_id);
  }

  function more_files() {
    $(".more_comment_files_link").remove();
    $('<div><input id="comment_files_" class="comments_files" name="comment_files[]" type="file"><a href="#" class="more_comment_files_link" onclick="javascript:more_files();" >#{t(:attach_another_file)}</a></div>').appendTo($(".comments_files_div"));
  }
