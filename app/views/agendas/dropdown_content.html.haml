.event_details_dropdown
  %h1
    = t ".#{@model_name.to_s.tableize}"
    = @event.respond_to?(:name) ? @event.name : @event.title
  / se for a visualização de aluno/professor
  - unless can? :edit, @model_name
    / verifica se o "caminho" da ferramenta já é uma string
    - if @event.parents_path.is_a?(String)
      / se for, é uma ferramenta para mais de uma turma
      %h3
        = @event.parents_path
        = content_tag(:i, nil, class: "toggle_groups icon-arrow-down-triangle", :"data-tooltip" => t(".see_groups"))
    - else
      / se não for, é para uma turma ou oferta ou uc ou curso
      - @event.parents_path.each do |path|
        %h3= path
  - recurring = (@event.respond_to?(:start_hour) and @event.respond_to?(:end_hour) and not(@event.start_hour.blank? or @event.end_hour.blank?))
  %h3= (recurring ? "#{@event.start_hour} - #{@event.end_hour}" : t(".all_day"))
  - same_day = (@event.schedule.start_date == @event.schedule.end_date)
  %h3= (same_day ? l(@event.schedule.start_date, format: :normal) : [l(@event.schedule.start_date, format: :normal), l(@event.schedule.end_date, format: :normal)].join(" - "))

  %h2= truncate((@event.respond_to?(:enunciation) ? @event.enunciation : @event.description) || "", length: 200, omission: '...')

  .input.group_label.invisible
    = label_tag t(".groups")
    %span.groups
      - @event.groups.map(&:code).each do |group_code|
        %span.collection_check_boxes= group_code

  .line

  .btn-group
    .left
      - if can? :destroy, @model_name, on: @allocation_tags_ids.split(" ")
        = link_to (content_tag(:i, nil, class: 'icon-trash')), "#", class: 'btn btn_caution delete_event', :"data-link-delete" => polymorphic_path([@event], allocation_tags_ids: @allocation_tags_ids), :'data-tooltip' => t(".remove"), id: @event.id
    .right{style: (can?(:edit, @model_name, on: @allocation_tags_ids) ? "" : "margin-left: 96px") }
      - if can? :edit, @model_name, on: @allocation_tags_ids
        = link_to (content_tag(:i, nil, class: 'icon-edit')), edit_polymorphic_path([@event], allocation_tags_ids: @allocation_tags_ids, calendar: true), class: 'btn edit_event', :'data-tooltip' => t(".edit"), id: @event.id
      - if can? :show, @model_name, on: @allocation_tags_ids
        = link_to (content_tag(:i, nil, class: 'icon-eye')), polymorphic_path([@event], allocation_tags_ids: @allocation_tags_ids), class: 'btn btn_main show_event', :'data-tooltip' => t(".details"), id: @event.id

= javascript_include_tag "tooltip"

= hidden_field_tag :groups_codes, @event.groups.map(&:code)

:javascript

  $(function(){
    var groups = $("#groups_codes").val().split(" ");

    $(".toggle_groups").unbind().click(function(){

      if( $(this).hasClass("icon-arrow-down-triangle") ){
        var groups_div = $("<span class='groups'></span>");
        $.each(groups, function(idx){
          groups_div.append("<span class='collection_check_boxes'>"+groups[idx]+"</span>")
        });

        $(this).parent().after(groups_div);
      }else
        $(this).parent().parent().find(".groups").remove();

      $(this).toggleClass("show_groups").toggleClass("icon-arrow-down-triangle icon-arrow-up-triangle");
    });

    if ($("#radio_option_group").prop("checked"))
      $(".group_label").show();

    $(".delete_event").click(function(){
      if (!confirm("#{I18n.t(:message_confirm)}"))
        return false;

      $.delete($(this).data('link-delete'), function(data){
        flash_message(data.notice, 'notice');
        $.get($(".calendar_schedules").data("link-list"), function(data){
            $(".calendar_schedules").replaceWith(data);
        });
      }).error(function(data){
        var data = $.parseJSON(data.responseText);
        if (typeof(data.alert) != "undefined")
          flash_message(data.alert, 'alert');
      })
    });

    $(".edit_event").call_fancybox();
    $(".show_event").call_fancybox({
      autoDimensions: false,
      maxWidth: 402,
      maxHeight: 500
    });
  });
  