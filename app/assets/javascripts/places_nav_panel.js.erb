/*
Precisamos:
	- Tratar acentos;
	- Criar interdependências nas buscas
	- Trocar o tokenValue: para allocationTagId
	- Colocar as opções de cada menu num json
	- Manter valores selecionados em caso de refresh
	- Só um item deve ser selecionado em cada TokenInput
	
	- Ordenar resultados das consultas
	- Agrupar semestres/disciplinas/turmas de nome igual
	
Id sempre é allocationTagId
Curso:
	- A pesquisa deve retornar a lista de todos os cursos aos quais o usuário é relacionado em algum nível.
	- Não depende de nenhum outro filtro
Semestre
	- Deve listar (Sem repetir) as ofertas de acordo com o string "semestre" delas.
	- Como há mais de uma oferta por semestre, semestre retornado deve ter um array de AllocationTagIds de todas as ofertas
	- Este filtro deve respeitar o filtro de Curso.
Unidade Curricular
	- Deve listar as ofertas (sem repetir) de acordo com o nome(ou código) da unidade curricular
	- Este filtro deve respeitar os filtros de Graduação e de Semestre
		- Deve receber um array de graduações (podendo ser vazio)
		- Deve receber um array de ofertas (podendo ser vazio)	
	- Havendo mais de uma oferta com o mesmo nome, a oferta selecionada vai ter um array de allocationTagIds
Turma
	- Deve listar as turmas (sem repetir) de acordo com seu código
	- Este filtro deve respeitar os filtros de Graduação, de Semestre e unidade curricular
		- Deve receber um array de graduações (podendo ser vazio)
		- Deve receber um array de ofertas (podendo ser vazio)	
	- Havendo mais de uma turma com o mesmo código, a oferta selecionada vai ter um array de allocationTagIds
Tudos
	-Devem ter um valor a mais na resposta equivalente a Todos os allocationTags deste nível 
	ignorando a chave de busca mas respeitando os filtros anteriores
	- A palavra "Todos" deve ser internacionalizada


*/


$(document).ready(function(){

	function recountItems(){
		console.log(Date() + 'Recontando...');
		$(".placesNavPanel #counter").text('99');
	
	}

	$( "#txtCourse").tokenInput(search_urls["course"], {
		hintText: hints["course"],
		searchingText: messages["searching"],
		queryParam : 'search',
		tokenLimit: 1,
		propertyToSearch: 'name',
		tokenValue: 'allocation_tag',
		noResultsText: messages["noResults"],
		onAdd: function (item) {
            $('#txtSemester').tokenInput('clear');
            $('#txtCurriculumUnit').tokenInput('clear');
            $('#txtGroup').tokenInput('clear');
            $('#token-input-txtSemester').focus();
        },
        onDelete: function (item) {
            $('#txtSemester').tokenInput('clear');
            $('#txtCurriculumUnit').tokenInput('clear');
            $('#txtGroup').tokenInput('clear');
            $('#token-input-txtCourse').focus();
        }
	});

	$( "#txtSemester").tokenInput(function() {
			if ($("#txtCourse").tokenInput("get").length > 0) 
				return search_urls["semester"]+"?chained_filter="+ $("#txtCourse").tokenInput("get")[0].allocation_tag_id + "&";
			return search_urls["semester"];
		}, {
		hintText: hints["semester"],
		searchingText: messages["searching"],
		noResultsText: messages["noResults"],
		queryParam : 'search_semester',
		tokenLimit: 1,
		propertyToSearch: 'semester',
		tokenValue: 'allocation_tag',
		onAdd: function (item) {
            $('#txtCurriculumUnit').tokenInput('clear');
            $('#txtGroup').tokenInput('clear');
            $('#token-input-txtCurriculumUnit').focus();
        },
        onDelete: function (item) {
            $('#txtCurriculumUnit').tokenInput('clear');
            $('#txtGroup').tokenInput('clear');
            $('#token-input-txtSemester').focus();
        }
	});
	
	$( "#txtCurriculumUnit").tokenInput(function() {
			if ($("#txtSemester").tokenInput("get").length > 0) 
				return search_urls["curriculumUnit"]+"?chained_filter="+ $("#txtSemester").tokenInput("get")[0].allocation_tag_id + "&";
			if ($("#txtCourse").tokenInput("get").length > 0) 
				return search_urls["curriculumUnit"]+"?chained_filter="+ $("#txtCourse").tokenInput("get")[0].allocation_tag_id + "&";
			return search_urls["curriculumUnit"];
		}
		, {
		hintText: hints["curriculumUnit"],
		searchingText: messages["searching"],
		noResultsText: messages["noResults"],
		queryParam : 'search_curriculum_unit',
		tokenLimit: 1,
		propertyToSearch: 'name',
		tokenValue: 'allocation_tag',
		onAdd: function (item) {
		    $('#txtGroup').tokenInput('clear');
            $('#token-input-txtGroup').focus();
		},
		onDelete: function(item) {
            $('#txtGroup').tokenInput('clear');
			$('#token-input-txtCurriculumUnit').focus();
		}
		
	});
	$( "#txtGroup").tokenInput(function() {
			if ($("#txtCurriculumUnit").tokenInput("get").length > 0) 
				return search_urls["group"]+"?chained_filter="+ $("#txtCurriculumUnit").tokenInput("get")[0].allocation_tag_id + "&";
			if ($("#txtSemester").tokenInput("get").length > 0) 
				return search_urls["group"]+"?chained_filter="+ $("#txtSemester").tokenInput("get")[0].allocation_tag_id + "&";
			if ($("#txtCourse").tokenInput("get").length > 0) 
				return search_urls["group"]+"?chained_filter="+ $("#txtCourse").tokenInput("get")[0].allocation_tag_id + "&";
			return search_urls["group"]
		}, {
		hintText: hints["group"],
		searchingText: messages["searching"],
		noResultsText: messages["noResults"],
		queryParam : 'search',
		tokenLimit: 1,
		propertyToSearch: 'code',
		tokenValue: 'allocation_tag',
		onDelete: function(item) {
			$('#token-input-txtGroup').focus();
		}
	});

	$('.placesNavPanel input[type="button"]').click(function(){
		showNavPanelMenu(this);
	});

	$(window).click(function(e){
		if ($(e.target).parents('#navPanelMenu').length == 0 && $(e.target).filter('.placesNavPanel input[type="button"]').length == 0)
			$('#navPanelMenu').remove();	
	});

});

function showNavPanelMenu(element){
	if ($('#navPanelMenu').length)
		$('#navPanelMenu').remove();

	var pnl = '<ul id="navPanelMenu" style="display:none;opacity:0.9">';
	pnl += '<li><a href="#" onclick="return false;">[Novo]</a></li>';
	pnl += '<li><a href="#" onclick="return false;">[Alterar]</a></li>';
	pnl += '<li><a href="#" onclick="return false;">[Excluir]</a></li>';
	pnl += '<li><a href="#" onclick="return false;">[Ofertar]</a></li>';
	pnl += '</ul>';

	//var left = $(element).position().left + $(element).outerWidth();
	$('body').append(pnl);
	
	console.log(element);
	//$('#navPanelMenu').css('left', ''+ left + 'px')
	$('#navPanelMenu').position({
		my: 'left top',
		at: 'right top',
		of: $(element)
	});

	$('#navPanelMenu').slideDown('fast');
	//console.log(pnl);
	//console.log($('#navPanelMenu'));
}



